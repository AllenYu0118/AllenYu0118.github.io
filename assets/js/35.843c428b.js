(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{276:function(t,l,e){"use strict";e.r(l);var n=e(2),s=Object(n.a)({},(function(){var t=this,l=t.$createElement,e=t._self._c||l;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("最近遇到小伙伴在写完需求后，一个页面的代码量从 400 多行直接干到 800 行，提醒需要对代码进行拆分了，但发现拆分的效果很不好，主要有两点：")]),t._v(" "),e("ul",[e("li",[t._v("代码逻辑更复杂了，因为增加了父子组件的事件和状态传递；")]),t._v(" "),e("li",[t._v("纯粹的依照页面”结构“，进行了划分，状态和功能散落，后续维护起来肯定很 🥚 疼；")])]),t._v(" "),e("p",[t._v("经过沟通和了解，发现小伙伴的出发点可能存在问题，一般我们考虑代码是否需要拆分，主要基于两个点：")]),t._v(" "),e("ul",[e("li",[t._v("功能的复用性，对于使用场景较多或通用性较强的功能，我们会拆分出基础组件，并基于场景的不同扩展这个组件的能力；")]),t._v(" "),e("li",[t._v("页面可维护性，当页面中的状态和数据过多时，也需要进行模块拆分，但拆分模块或组件并不是为了复用性，而是逻辑封装和可维护性；")])])])}),[],!1,null,null,null);l.default=s.exports}}]);