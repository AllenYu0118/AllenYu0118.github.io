(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{269:function(t,s,a){"use strict";a.r(s);var e=a(2),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v("Intersection Observer API 提供了一种异步检测目标元素与祖先元素或 viewport 相交情况变化的方法。")])]),t._v(" "),a("h2",{attrs:{id:"使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" observer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IntersectionObserver")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("code",[t._v("IntersectionObserver")]),t._v(" 是一个构造函数, 由浏览器提供, 可以传递 "),a("code",[t._v("callback")]),t._v(" 回调函数, 以及 "),a("code",[t._v("options")]),t._v(" 配置对象（可选）。")]),t._v(" "),a("p",[t._v("构造函数返回值是一个观察器实例，实例具备以下多种方法：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("observer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("observe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.hook'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定观察 class 为 hook DOM 节点")]),t._v("\n\nobserver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("unobserve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 停止观察特定目标元素")]),t._v("\n\nobserver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("disconnect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 停止观察")]),t._v("\n\nobserver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeRecords")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回观察目标的 entries 对象数组")]),t._v("\n")])])]),a("p",[a("code",[t._v("observer.observe()")]),t._v(" 方法只能传递一个 DOM 对象，如果需要观察多个，就要多次调用这个方法。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelectorAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'li'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("$item")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  observer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("observe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("上面代码中，演示了如何观察多个 "),a("code",[t._v("li")]),t._v(" 元素。")]),t._v(" "),a("h2",{attrs:{id:"callback-回调参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#callback-回调参数"}},[t._v("#")]),t._v(" callback 回调参数")]),t._v(" "),a("p",[t._v("回调函数接收 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/IntersectionObserverEntry",target:"_blank",rel:"noopener noreferrer"}},[t._v("IntersectionObserverEntry"),a("OutboundLink")],1),t._v(" 参数数组，只要满足 "),a("code",[t._v("options.threshold")]),t._v(" 指定的阀值，就会执行一次 "),a("code",[t._v("callback")]),t._v("。")]),t._v(" "),a("p",[t._v("如果 "),a("code",[t._v("options.threshold")]),t._v(" 是默认值 "),a("code",[t._v("0")]),t._v("：\n第一次触发，是目标元素刚刚进入视口（开始可见），第二次是目标元素完全离开视口（全部不可见）。")]),t._v(" "),a("p",[t._v("如果设置 "),a("code",[t._v("options.threshold")]),t._v(" 的值是 "),a("code",[t._v("1")]),t._v("：\n第一次触发，是目标元素完全进入视口（全部可见），第二次是目标元素刚刚离开视口（开始不可见）。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" observer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IntersectionObserver")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("entries")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  entries"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("entry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'entry: '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" entry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("上面的代码表示回调函数会接收 "),a("code",[t._v("entries")]),t._v(" 参数，"),a("code",[t._v("entries")]),t._v(" 是一个数组，每一个数组成员都是 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/IntersectionObserverEntry",target:"_blank",rel:"noopener noreferrer"}},[t._v("IntersectionObserverEntry"),a("OutboundLink")],1),t._v(" 对象。")]),t._v(" "),a("h2",{attrs:{id:"intersectionobserverentry-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#intersectionobserverentry-对象"}},[t._v("#")]),t._v(" IntersectionObserverEntry 对象")]),t._v(" "),a("p",[t._v("目前该对象提供八个属性，分别是：")]),t._v(" "),a("ul",[a("li",[t._v("boundingClientRect: 返回目标元素的边界（矩形）信息。")]),t._v(" "),a("li",[t._v("intersectionRatio: 返回 "),a("code",[t._v("intersectionRect")]),t._v(" 与 "),a("code",[t._v("boundingClientRect")]),t._v(" 比值。")]),t._v(" "),a("li",[t._v("intersectionRect: 返回视口和目标元素相交区域的边界（矩形）信息。")]),t._v(" "),a("li",[t._v("isIntersecting: 返回一个布尔值，目标元素与视口相交，返回 "),a("code",[t._v("true")]),t._v("，否则 "),a("code",[t._v("false")]),t._v("。")]),t._v(" "),a("li",[t._v("isVisible: 返回一个布尔值，MDN 上未对此属性进行说明，不能明确定义。")]),t._v(" "),a("li",[t._v("rootBounds: 返回根的区域的边界（矩形）信息。")]),t._v(" "),a("li",[t._v("target: 被观察的目标元素，是一个 "),a("code",[t._v("DOM")]),t._v(" 节点对象。")]),t._v(" "),a("li",[t._v("time: 时间戳，触发的时间，单位为毫秒。")])]),t._v(" "),a("h2",{attrs:{id:"options-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-对象"}},[t._v("#")]),t._v(" Options 对象")]),t._v(" "),a("p",[a("code",[t._v("IntersectionObserver")]),t._v(" 构造函数的第二个参数，是一个可配置的对象。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" options "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("root")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'window'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("rootMargin")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("threshold")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"root-根元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#root-根元素"}},[t._v("#")]),t._v(" root 根元素")]),t._v(" "),a("p",[t._v("用于检查目标的可见性，默认是浏览器窗口，必须是目标元素的父元素。")]),t._v(" "),a("h3",{attrs:{id:"rootmargin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rootmargin"}},[t._v("#")]),t._v(" rootMargin")]),t._v(" "),a("p",[t._v("用于调整 "),a("code",[t._v("root")]),t._v(" 区域的 "),a("code",[t._v("rootBounds")]),t._v(" 边界（矩形）信息，使用 "),a("code",[t._v("CSS")]),t._v(" 定义方式：")]),t._v(" "),a("ul",[a("li",[t._v('rootMargin: "40px 30px 20px 10px" 表示扩大 '),a("code",[t._v("root")]),t._v(" 的上、右、下、左的区域。")]),t._v(" "),a("li",[t._v('rootMargin: "-40px -30px -20px -10px" 表示缩小 '),a("code",[t._v("root")]),t._v(" 的上、右、下、左的区域。")])]),t._v(" "),a("h3",{attrs:{id:"threshold-临界值属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#threshold-临界值属性"}},[t._v("#")]),t._v(" threshold 临界值属性")]),t._v(" "),a("p",[t._v("它决定了什么时候触发回调函数。可以通过数组表示多个临界值，也可以通过单数字表示一个临界值，默认值是 "),a("code",[t._v("0")]),t._v("。表示目标元素刚刚开始出现就会触发回调函数。")]),t._v(" "),a("p",[t._v("定义 "),a("code",[t._v("threshold: [0, 0.2, 0.4, 0.6, 1]")]),t._v(" 多个临界值，表示的意思是：目标元素在刚刚显示、显示 20%，显示 40%，显示 60%，全部显示，这五个临界点时都会触发定义的回调函数！")]),t._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Intersection_Observer_API",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN Intersection Observer API"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.cn/post/6844904121833619469",target:"_blank",rel:"noopener noreferrer"}},[t._v("IntersectionObserver API 应用总结"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2016/11/intersectionobserver_api.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("IntersectionObserver API 使用教程"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);